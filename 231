//power of 2
// n&n-1 approach
// n&n-1 will always give the result 0
class Solution {
public:
    bool isPowerOfTwo(int n) {
        if(n<=0){
            return false;
        }
        return (n&(n-1))==0;
    }
};


// xor digit approach
// perform xor with every bit of no. and 0
//only 2^n nos. will give the ans. 1
class Solution {
public:
    bool isPowerOfTwo(int n) {
        if(n<=0){
            return false;
        }
        else{
        int m=n;int xd=0;int ld;
while(m!=0){
        ld=m&1;
if((xd < INT_MAX) && (xd > INT_MIN)){
    xd=xd+(ld ^ 0);
    m=m>>1;
}}
if(xd==1){
    return true;
}
else{
        return false;
    }
}
}
};
